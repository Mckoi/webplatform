/**
 * com.mckoi.process.impl.ProcessUserCodeException  Sep 17, 2012
 *
 * Mckoi Database Software ( http://www.mckoi.com/ )
 * Copyright (C) 2000 - 2012  Diehl and Associates, Inc.
 *
 * This program is free software: you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 3 as published by
 * the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License version 3
 * along with this program.  If not, see ( http://www.gnu.org/licenses/ ) or
 * write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA  02111-1307, USA.
 *
 * Change Log:
 *
 *
 */

package com.mckoi.process.impl;

import com.mckoi.webplatform.util.LogUtils;

/**
 * An exception we wrap around an exception generated by user code in a
 * process.
 *
 * @author Tobias Downer
 */

@SuppressWarnings("serial")
class ProcessUserCodeException extends Exception {

  // NOTE: We copy the message and throwable stack trace into strings because
  //   we don't want to risk running potential user code outside of our
  //   sandbox.
  private final String user_code_message;
  private final String user_code_stack_trace;

  ProcessUserCodeException(Throwable cause) {
    super();
    user_code_message = cause.getMessage();
    user_code_stack_trace = LogUtils.stringStackTrace(cause);
  }

  ProcessUserCodeException(String message, Throwable cause) {
    super(message);
    user_code_message = cause.getMessage();
    user_code_stack_trace = LogUtils.stringStackTrace(cause);
  }

  ProcessUserCodeException(String message) {
    super(message);
    user_code_message = "";
    user_code_stack_trace = "";
  }

  ProcessUserCodeException() {
    super();
    user_code_message = "";
    user_code_stack_trace = "";
  }
  
  /**
   * Returns the user code throwable message.
   */
  String getUserCodeMessage() {
    return user_code_message;
  }
  
  /**
   * Returns the user code stack trace as a string.
   */
  String getUserCodeStackTrace() {
    return user_code_stack_trace;
  }

}
