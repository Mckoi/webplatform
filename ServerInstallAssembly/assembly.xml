<assembly xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.0" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.0 http://maven.apache.org/xsd/assembly-1.1.0.xsd">

  <id>bin</id>
  <formats>
    <format>zip</format>
  </formats>
  <includeBaseDirectory>true</includeBaseDirectory>

  <!-- This project -->
  <fileSets>

    <!-- The installed policy stuff -->
    <fileSet>
      <directory>${project.basedir}/examples/</directory>
      <outputDirectory>support/install_dev/conf/</outputDirectory>
      <includes>
        <include>app_service.properties</include>
        <include>system_classes.policy</include>
      </includes>
    </fileSet>

    <!-- Insert an empty file just to make the cert directory -->
    <fileSet>
      <directory>${project.basedir}/examples/</directory>
      <outputDirectory>support/install_dev/cert/</outputDirectory>
      <includes>
        <include>empty.txt</include>
      </includes>
    </fileSet>

    <!-- Insert an empty.zip file used for a ZIP hack -->
    <fileSet>
      <directory>${project.basedir}/examples/</directory>
      <outputDirectory>support/install_dev/lib/user/</outputDirectory>
      <includes>
        <include>empty.zip</include>
      </includes>
    </fileSet>

    <!-- Copy the Windows or Linux security policy files -->
    <fileSet>
      <directory>${project.basedir}/examples/</directory>
      <outputDirectory>support/security/</outputDirectory>
      <includes>
        <include>openjdk_linux_security.policy</include>
        <include>oraclejdk_mswindows_security.policy</include>
      </includes>
    </fileSet>

    <!-- Copy Windows and Linux commands and README -->
    <fileSet>
      <directory>${project.basedir}/admin_files/</directory>
      <outputDirectory>.</outputDirectory>
      <includes>
        <include>README.txt</include>
        <include>nodeinstall.bat</include>
        <include>nodeinstall.sh</include>
      </includes>
    </fileSet>
      

  </fileSets>



  <dependencySets>

    <!-- The base dependencies -->
    <dependencySet>
      <includes>
        <include>com.mckoi.platform:MWPCore</include>
      </includes>
      <useProjectArtifact>false</useProjectArtifact>
      <useTransitiveFiltering>false</useTransitiveFiltering>
      <outputDirectory>support/install_dev/lib/base/</outputDirectory>
    </dependencySet>

    <dependencySet>
      <includes>
        <include>com.mckoi:MckoiDDB</include>
        <include>com.mckoi.platform:MWPMain</include>
        <include>org.json:json</include>
      </includes>
      <useProjectArtifact>false</useProjectArtifact>
      <useTransitiveFiltering>true</useTransitiveFiltering>
      <outputDirectory>support/</outputDirectory>
    </dependencySet>

    <!-- The application server dependencies -->
    <dependencySet>
      <includes>
        <include>com.mckoi.jasper:ModJasper</include>
        <include>org.eclipse.jetty.aggregate:jetty-all-server</include>
        <include>asm:asm-all</include>
<!--        <include>org.apache.geronimo.bundles:jstl</include> -->
        <include>org.eclipse.jetty.orbit:javax.activation</include>
        <include>org.eclipse.jetty.orbit:javax.annotation</include>
        <include>org.eclipse.jetty.orbit:javax.mail.glassfish</include>
        <include>org.eclipse.jetty.orbit:javax.security.auth.message</include>
        <include>org.eclipse.jetty.orbit:javax.servlet</include>
        <include>junit:junit</include>
      </includes>
      <useProjectArtifact>false</useProjectArtifact>
      <useTransitiveFiltering>true</useTransitiveFiltering>
      <outputDirectory>support/install_dev/lib/jetty/</outputDirectory>
    </dependencySet>

    <!-- Shared user libs -->
    <dependencySet>
      <includes>
        <include>org.mozilla:rhino</include>
      </includes>
      <useProjectArtifact>false</useProjectArtifact>
      <useTransitiveFiltering>true</useTransitiveFiltering>
      <outputDirectory>support/install_dev/lib/user/</outputDirectory>
    </dependencySet>

    <!-- The default console web app -->
    <dependencySet>
      <includes>
        <include>com.mckoi.platform:MWPUIApp:war</include>
      </includes>
      <useProjectArtifact>false</useProjectArtifact>
      <useTransitiveFiltering>true</useTransitiveFiltering>
      <outputDirectory>support/console_webapp/</outputDirectory>
    </dependencySet>

  </dependencySets>

</assembly>